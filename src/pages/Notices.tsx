import Layout from "@/components/layout/Layout";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, ChevronRight } from "lucide-react";
import { useState } from "react";
import { Button } from "@/components/ui/button";

interface Notice {
  id: number;
  title: string;
  date: string;
  category: "ржЬрж░рзБрж░рж┐" | "рж╕рж╛ржзрж╛рж░ржг" | "ржЗржнрзЗржирзНржЯ" | "ржШрзЛрж╖ржгрж╛";
  content: string;
  isImportant: boolean;
}

const Notices = () => {
  const [selectedNotice, setSelectedNotice] = useState<Notice | null>(null);

  const notices: Notice[] = [
    {
      id: 1,
      title: "ржЬрж░рзБрж░рж┐ рж░ржХрзНрждрзЗрж░ ржкрзНрж░ржпрж╝рзЛржЬржи - O+ ржЧрзНрж░рзБржк",
      date: "рзирзжрзирзк-рзжрзз-рззрзо",
      category: "ржЬрж░рзБрж░рж┐",
      isImportant: true,
      content: "рж╢рж╣рзАржж ржЬрж┐ржпрж╝рж╛ржЙрж░ рж░рж╣ржорж╛ржи ржорзЗржбрж┐ржХрзЗрж▓ ржХрж▓рзЗржЬ рж╣рж╛рж╕ржкрж╛рждрж╛рж▓рзЗ ржПржХржЬржи рж░рзЛржЧрзАрж░ ржЬрж░рзБрж░рж┐ O+ ржЧрзНрж░рзБржкрзЗрж░ рж░ржХрзНрждрзЗрж░ ржкрзНрж░ржпрж╝рзЛржЬржиред рж░рзЛржЧрзАрж░ ржмржпрж╝рж╕ рзйрзл ржмржЫрж░ред ржжрзБрж░рзНржШржЯржирж╛ржпрж╝ ржЖрж╣ржд рж╣ржпрж╝рзЗ ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ ржЬржирзНржп рзи ржмрзНржпрж╛ржЧ рж░ржХрзНрждрзЗрж░ ржкрзНрж░ржпрж╝рзЛржЬржиред ржпрзЛржЧрж╛ржпрзЛржЧ: рзжрззрзнрзирзирзлрзирзорззрзмрзк"
    },
    {
      id: 2,
      title: "ржорж╛рж╕рж┐ржХ рж░ржХрзНрждржжрж╛ржи ржХрзНржпрж╛ржорзНржк - ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐ рзирзжрзирзк",
      date: "рзирзжрзирзк-рзжрзз-рззрзл",
      category: "ржЗржнрзЗржирзНржЯ",
      isImportant: false,
      content: "ржЖржЧрж╛ржорзА рзирзл ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐ рзирзжрзирзк рждрж╛рж░рж┐ржЦрзЗ рж╕ржХрж╛рж▓ рзпржЯрж╛ ржерзЗржХрзЗ ржмрж┐ржХрж╛рж▓ рзкржЯрж╛ ржкрж░рзНржпржирзНржд ржмржЧрзБржбрж╝рж╛ рж╢рж╣рзАржж ржЬрж┐ржпрж╝рж╛ржЙрж░ рж░рж╣ржорж╛ржи ржорзЗржбрж┐ржХрзЗрж▓ ржХрж▓рзЗржЬрзЗ ржорж╛рж╕рж┐ржХ рж░ржХрзНрждржжрж╛ржи ржХрзНржпрж╛ржорзНржк ржЕржирзБрж╖рзНржарж┐ржд рж╣ржмрзЗред рж╕ржмрж╛ржЗржХрзЗ ржЕржВрж╢ржЧрзНрж░рж╣ржгрзЗрж░ ржЬржирзНржп ржЕржирзБрж░рзЛржз ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред"
    },
    {
      id: 3,
      title: "ржирждрзБржи рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржирж┐ржмржирзНржзржи ржЪрж╛рж▓рзБ",
      date: "рзирзжрзирзк-рзжрзз-рззрзж",
      category: "ржШрзЛрж╖ржгрж╛",
      isImportant: false,
      content: "BOBDO рждрзЗ ржирждрзБржи рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ рж╣рж┐рж╕рзЗржмрзЗ ржпрзЛржЧржжрж╛ржирзЗрж░ рж╕рзБржпрзЛржЧред ржЖржЧрзНрж░рж╣рзА ржкрзНрж░рж╛рж░рзНржерзАрж░рж╛ ржЖржорж╛ржжрзЗрж░ ржлрзЗрж╕ржмрзБржХ ржЧрзНрж░рзБржкрзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржиред ржмрж┐рж╢рзЗрж╖ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржгрзЗрж░ ржмрзНржпржмрж╕рзНржерж╛ рж░ржпрж╝рзЗржЫрзЗред"
    },
    {
      id: 4,
      title: "ржкрзНрж░рж╛ржержорж┐ржХ ржЪрж┐ржХрж┐рзОрж╕рж╛ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрж░рзНржорж╢рж╛рж▓рж╛",
      date: "рзирзжрзирзк-рзжрзз-рзжрзл",
      category: "ржЗржнрзЗржирзНржЯ",
      isImportant: true,
      content: "ржЖржЧрж╛ржорзА рзйрзж ржЬрж╛ржирзБржпрж╝рж╛рж░рж┐ рзирзжрзирзк рждрж╛рж░рж┐ржЦрзЗ ржмрж┐ржХрж╛рж▓ рзиржЯрж╛ржпрж╝ ржмржЧрзБржбрж╝рж╛ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзЗржирзНржЯрж╛рж░рзЗ ржкрзНрж░рж╛ржержорж┐ржХ ржЪрж┐ржХрж┐рзОрж╕рж╛ ржмрж┐рж╖ржпрж╝ржХ ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрж░рзНржорж╢рж╛рж▓рж╛ред рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗред"
    },
    {
      id: 5,
      title: "AB- рж░ржХрзНрждрзЗрж░ ржЬрж░рзБрж░рж┐ ржкрзНрж░ржпрж╝рзЛржЬржи",
      date: "рзирзжрзирзк-рзжрзз-рзжрзи",
      category: "ржЬрж░рзБрж░рж┐",
      isImportant: true,
      content: "ржПржХржЬржи ржЧрж░рзНржнржмрждрзА ржорж╛ржпрж╝рзЗрж░ ржЬржЯрж┐рж▓рждрж╛рж░ ржХрж╛рж░ржгрзЗ AB- ржЧрзНрж░рзБржкрзЗрж░ рж░ржХрзНрждрзЗрж░ ржЬрж░рзБрж░рж┐ ржкрзНрж░ржпрж╝рзЛржЬржиред ржЕржмрж╕рзНржерж╛ржи: ржЗржмржирзЗ рж╕рж┐ржирж╛ рж╣рж╛рж╕ржкрж╛рждрж╛рж▓, ржмржЧрзБржбрж╝рж╛ред ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи: рзжрззрзнрзирзирзлрзирзорззрзмрзк"
    },
    {
      id: 6,
      title: "ржерзНржпрж╛рж▓рж╛рж╕рзЗржорж┐ржпрж╝рж╛ рж░рзЛржЧрзАржжрзЗрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рзНржорж╕рзВржЪрж┐",
      date: "рзирзжрзирзй-рззрзи-рзирзо",
      category: "ржШрзЛрж╖ржгрж╛",
      isImportant: false,
      content: "ржерзНржпрж╛рж▓рж╛рж╕рзЗржорж┐ржпрж╝рж╛ ржЖржХрзНрж░рж╛ржирзНржд рж╢рж┐рж╢рзБржжрзЗрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ рж░ржХрзНрждржжрж╛ржи ржХрж░рзНржорж╕рзВржЪрж┐ рж╢рзБрж░рзБ рж╣ржпрж╝рзЗржЫрзЗред ржирж┐ржпрж╝ржорж┐ржд рж░ржХрзНрждржжрж╛рждрж╛ рж╣рждрзЗ ржЖржЧрзНрж░рж╣рзАрж░рж╛ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржиред"
    }
  ];

  const getCategoryColor = (category: string) => {
    switch (category) {
      case "ржЬрж░рзБрж░рж┐":
        return "bg-red-100 text-red-800 border-red-200";
      case "ржЗржнрзЗржирзНржЯ":
        return "bg-blue-100 text-blue-800 border-blue-200";
      case "ржШрзЛрж╖ржгрж╛":
        return "bg-green-100 text-green-800 border-green-200";
      default:
        return "bg-gray-100 text-gray-800 border-gray-200";
    }
  };

  if (selectedNotice) {
    return (
      <Layout title="ржирзЛржЯрж┐рж╢ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд">
        <div className="px-4">
          <Button
            variant="ghost"
            onClick={() => setSelectedNotice(null)}
            className="mb-4 text-primary"
          >
            тЖР ржкрж┐ржЫржирзЗ ржпрж╛ржи
          </Button>
          
          <Card>
            <CardContent className="p-6">
              <div className="mb-4">
                <Badge className={getCategoryColor(selectedNotice.category)}>
                  {selectedNotice.category}
                </Badge>
                {selectedNotice.isImportant && (
                  <Badge className="ml-2 bg-yellow-100 text-yellow-800 border-yellow-200">
                    ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг
                  </Badge>
                )}
              </div>
              
              <h1 className="text-xl font-bold font-bengali mb-3 text-foreground">
                {selectedNotice.title}
              </h1>
              
              <div className="flex items-center gap-2 mb-4 text-muted-foreground">
                <Calendar className="h-4 w-4" />
                <span className="text-sm font-bengali">{selectedNotice.date}</span>
              </div>
              
              <div className="prose prose-sm font-bengali text-foreground">
                <p className="leading-relaxed">{selectedNotice.content}</p>
              </div>
              
              {selectedNotice.category === "ржЬрж░рзБрж░рж┐" && (
                <div className="mt-6 p-4 bg-red-50 border border-red-200 rounded-lg">
                  <p className="text-red-800 font-bengali font-semibold text-center">
                    ЁЯЖШ ржЬрж░рзБрж░рж┐ рж╕рж╣рж╛ржпрж╝рждрж╛рж░ ржЬржирзНржп: рзжрззрзнрзирзирзлрзирзорззрзмрзк
                  </p>
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      </Layout>
    );
  }

  return (
    <Layout title="ржирзЛржЯрж┐рж╢ ржмрзЛрж░рзНржб">
      <div className="px-4 space-y-4">
        {notices.map((notice) => (
          <Card 
            key={notice.id} 
            className={`cursor-pointer transition-all duration-200 hover:shadow-lg ${
              notice.isImportant ? 'border-l-4 border-l-primary' : ''
            }`}
            onClick={() => setSelectedNotice(notice)}
          >
            <CardContent className="p-4">
              <div className="flex items-start justify-between mb-2">
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-2">
                    <Badge className={getCategoryColor(notice.category)}>
                      {notice.category}
                    </Badge>
                    {notice.isImportant && (
                      <Badge className="bg-yellow-100 text-yellow-800 border-yellow-200">
                        ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг
                      </Badge>
                    )}
                  </div>
                  
                  <h3 className="font-semibold font-bengali text-lg leading-tight text-foreground">
                    {notice.title}
                  </h3>
                  
                  <div className="flex items-center gap-2 mt-2 text-muted-foreground">
                    <Calendar className="h-4 w-4" />
                    <span className="text-sm font-bengali">{notice.date}</span>
                  </div>
                </div>
                
                <ChevronRight className="h-5 w-5 text-muted-foreground" />
              </div>
              
              <p className="text-muted-foreground font-bengali text-sm line-clamp-2">
                {notice.content.substring(0, 100)}...
              </p>
            </CardContent>
          </Card>
        ))}
        
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
          <p className="text-blue-800 font-bengali text-center font-semibold">
            ЁЯУв рж╕ржм ржирзЛржЯрж┐рж╢ ржЖржорж╛ржжрзЗрж░ ржлрзЗрж╕ржмрзБржХ ржЧрзНрж░рзБржкрзЗржУ ржкрж╛ржмрзЗржи
          </p>
          <p className="text-blue-700 font-bengali text-center text-sm mt-1">
            ржжрзНрж░рзБржд ржЖржкржбрзЗржЯ ржкрзЗрждрзЗ ржЧрзНрж░рзБржкрзЗ ржпрзЛржЧ ржжрж┐ржи
          </p>
        </div>
      </div>
    </Layout>
  );
};

export default Notices;